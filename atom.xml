<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Metalinguistic]]></title>
  <link href="http://lfborjas.github.com/metaliguistic/atom.xml" rel="self"/>
  <link href="http://lfborjas.github.com/metaliguistic/"/>
  <updated>2012-08-30T03:35:35-04:00</updated>
  <id>http://lfborjas.github.com/metaliguistic/</id>
  <author>
    <name><![CDATA[Glazed Cinnamon Bun]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[The Last One]]></title>
    <link href="http://lfborjas.github.com/metaliguistic/blog/2012/08/30/the-last-one/"/>
    <updated>2012-08-30T03:28:00-04:00</updated>
    <id>http://lfborjas.github.com/metaliguistic/blog/2012/08/30/the-last-one</id>
    <content type="html"><![CDATA[<p>Referential transparency and referential opaqueness are properties of parts of computer programs. An expression is said to be referentially transparent if it can be replaced with its value without changing the behavior of a program (in other words, yielding a program that has the same effects and output on the same input). The opposite term is referential opaqueness.</p>

<p>While in mathematics all function applications are referentially transparent, in programming this is not always the case. The importance of referential transparency is that it allows the programmer and the compiler to reason about program behavior. This can help in proving correctness, simplifying an algorithm, assisting in modifying code without breaking it, or optimizing code by means of memoization, common subexpression elimination or parallelization.</p>
]]></content>
  </entry>
  
</feed>
